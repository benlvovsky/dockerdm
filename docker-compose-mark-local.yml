#required built images:
#from markowitzpy directory run:
#docker build -t img_markowitz .

#from marko-chart directory run:
#docker build -t img_markochart .

#run docker images into containers:
#docker-compose -f docker-compose-mark-local.yml up

#access to bash on markowitz-cont container:
#docker exec -it markowitz-cont bash

#access to bash on markochart-cont container:
#docker exec -it markochart-cont bash

#using envionment variables like:
#export MARKO_CHART_CODE=~/dev/marko-chart
#export MARKO_CHART_IMAGE=img_markochart:latest
#export MARKOWITZ_CODE=~/dev/markowitzpy
#export MARKOWITZ_IMAGE=img_markowitz:latest

#to call markowitz python container with markochart-cont use endpoint: http://markowitz-cont:5000/ef
#for manual test:
#1) from the host:                    docker exec -it markochart-cont bash
#2) once inside marcochart-cont use:  curl http://markowitz-cont:5000/ef

version: '3'
services:
  frontend:
    image: ${MARKO_CHART_IMAGE}
    container_name: markochart-cont
    ports:
      - "3000:3000"
    volumes:
      - ${MARKO_CHART_CODE}:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    links:
      - markowitz
  markowitz:
    image: ${MARKOWITZ_IMAGE}
    ports:
     - "5000:5000"
    container_name: markowitz-cont
    stdin_open: true
    environment:
      PGPASSWORD: postgres
      PGHOST: postgres_ml
      FLASK_APP: webapp.py
    tty: true
    working_dir: /usr/src/app
    volumes:
      - ${MARKOWITZ_CODE}:/usr/src/app
      - "/etc/ssl/certs:/etc/ssl/certs"
    command:
#      python -m flask run --host=0.0.0.0
      python webapp.py
